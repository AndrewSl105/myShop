{"version":3,"sources":["components/navigation/nav.js","components/product-list/product-list/queries.js","components/product-list/product-list/productListHoc.js","components/product-list/product-item/productItem.js","components/pagination/pagination.js","components/product-list/product-list/productList.js","components/pagination-pipe/paginationPipe.js","pages/home-page/home-page.js","components/forms/logInFrom.js","pages/auth-page/auth-page.js","components/admin-components/dashboard-sidebar/dashboardSidebar.js","components/admin-components/admin-pages/admin-main/adminMain.js","components/admin-components/admin-products/queries.js","components/admin-components/admin-products/adminProductsTableHoc.js","components/admin-components/admin-forms/delete-product-form/deleteProductForm.js","components/admin-components/admin-products/adminProductsTable.js","components/admin-components/admin-forms/add-product-form/addProductForm.js","components/admin-components/admin-popups/admin-create/adminCreate.js","components/admin-components/admin-pages/admin-products-list/adminProductList.js","pages/dashboard-page/dashboardPage.js","pages/catalog-page/catalogPage.js","components/product-details/product-deatils-item/productDetailsItem.js","components/product-details/prodcut-details-cont/productDetailsCont.js","routes/routes.js","history/history.js","App.js","serviceWorker.js","index.js","components/images/logo.png","components/images/cart.svg"],"names":["Nav","react_default","a","createElement","className","react_router_dom","to","src","logo","alt","cart","productsQuery","gql","_templateObject","compose","graphql","ProductItem","props","product","concat","id","image","name","Pagination","console","log","isOnLastPage","perPage","currentPage","totalItemsCount","pages","c","Math","ceil","p","pagesToShow","push","times","i","length","min","apply","max","sort","b","getPages","map","pageNum","buttonClass","key","onClick","n","onGoPage","primereact_button","prevButtonClass","prevButton","onPrevPage","tabIndex","nextButtonClass","nextButton","disabled","onNextPage","withHocs","_props$data","data","_data$products","products","progressspinner","_useState","useState","_useState2","Object","slicedToArray","pageArgs","setPageArgs","state","args","location","slice","paginationPipe","productItem","pagination_pagination","objectSpread","updatedState","HomePage","productList","LogInForm","inputtext","placeholder","variant","color","AuthPage","logInFrom","DashboardSidebar","url","useRouteMatch","visibleState","setVisibility","class","sidebar","visible","onHide","e","index_esm","AdminMain","queries_templateObject","deleteProductMutation","deleteProductForm_templateObject","DeleteProductForm","style","display","width","justifyContent","react_components_esm","mutation","variables","postMutation","shape","value","type","dataTable","expandedRows","setExpandedRows","_useState3","_useState4","productDialog","setProductDialog","_useState5","_useState6","deleteProductDialog","setDeleteProductDialog","_useState7","_useState8","setSubmitted","_useState9","_useState10","productId","setProductId","datatable","onRowToggle","rowExpansionTemplate","orders","column","field","header","sortable","dataKey","body","rowData","Fragment","icon","marginLeft","dialog","modal","deleteProductForm","addProductMutation","addProductForm_templateObject","AddProductForm","setName","description","setDescription","startQuantity","setQuantity","setImage","size","setSize","_useState11","_useState12","startPrice","setPrice","price","parseInt","quantity","onChange","target","inputtextarea","AdminCreate","displayPosition","setDisplayPosition","position","setPosition","dialogFuncMap","top","left","add_product_form_addProductForm","AdminProductList","adminCreate","admin_products_adminProductsTable","DashboardPage","path","dashboard_sidebar_dashboardSidebar","react_router","exact","admin_main_adminMain","admin_products_list_adminProductList","CatalogPage","ProductDetailsItem","productQuery","productDetailsCont_templateObject","productDetailsCont","search","useLocation","Id","URLSearchParams","get","query","_ref","progressbar","mode","product_deatils_item_productDetailsItem","Routes","component","history","createBrowserHistory","client","ApolloClient","uri","App","react_common_esm","navigation_nav","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.15a510f4.chunk.js","sourcesContent":["import React from 'react'\r\nimport './nav.sass';\r\nimport logo from '../images/logo.png'\r\nimport cart from '../images/cart.svg'\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <div className='nav-cont'>\r\n            <div className='logo-cont'>\r\n                <Link to=\"/\">\r\n                    <img src={logo} alt='logo fashion hub' />\r\n                    <h1>\r\n                        Style Hub\r\n                    </h1>\r\n                </Link>\r\n            </div>\r\n            <div className='cart-cont'>\r\n                    <img src={cart} alt='logo fashion hub' />\r\n            </div>\r\n            <div className='nav-left-cont'>\r\n                <ul className='nav-items-list'>\r\n                    <Link to=\"/auth\">\r\n                        Log in\r\n                    </Link>\r\n                    <Link to=\"/dashboard\">\r\n                        Admin\r\n                    </Link>\r\n                    <Link to=\"/catalog\">\r\n                        Catalog\r\n                    </Link>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const productsQuery = gql`\r\n  query productsQuery {\r\n    products {\r\n      id\r\n      name\r\n      image\r\n    }\r\n  }\r\n`;\r\n","import { compose } from 'recompose';\r\nimport { graphql } from 'react-apollo';\r\n\r\nimport { productsQuery } from './queries';\r\n\r\n\r\nexport default compose(graphql(productsQuery));\r\n","import React from 'react';\r\nimport './product-item.sass'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ProductItem = (props) => {\r\n\r\n    const product = props.product\r\n    return (\r\n        <div className='product-item-cont'>\r\n            <Link to={`/product/?id=${product.id}`}>\r\n                <div className='product-img'>\r\n                    <img src={product.image} />\r\n                </div>\r\n                <div className='product-decription'>\r\n                    <h2>\r\n                        {product.name}\r\n                    </h2>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProductItem;","import React from 'react';\r\nimport './pagination.sass'\r\nimport { Button } from 'primereact/button';\r\nconst  Pagination = props => {\r\n  console.log(props)\r\n\r\n  const onPage = (n) => { \r\n    props.onGoPage(n);\r\n  }\r\n\r\n  const isOnLastPage = () => {\r\n    return (\r\n      props.perPage * props.currentPage >= props.totalItemsCount\r\n    );\r\n  }\r\n\r\n  const totalPages = () => {\r\n    return Math.ceil(props.totalItemsCount / props.perPage) || 0;\r\n  }\r\n\r\n  const getMin = () => {\r\n    return props.perPage * props.currentPage - props.perPage + 1;\r\n  }\r\n\r\n  const getMax = () => {\r\n    let max = props.perPage * props.currentPage;\r\n    if (max > props.totalItemsCount) {\r\n      max = props.totalItemsCount;\r\n    }\r\n    return max;\r\n  }\r\n\r\n  const onPrev = () => {\r\n    props.onPrevPage();\r\n  };\r\n\r\n  const onNext = () => {\r\n    props.onNextPage();\r\n  };\r\n\r\n  const getPages = () => {\r\n    const c = Math.ceil(props.totalItemsCount / props.perPage);\r\n    const p = props.currentPage || 1;\r\n    const pagesToShow = props.pagesToShow || 9;\r\n    const pages = [];\r\n    pages.push(p);\r\n    const times = pagesToShow - 1;\r\n    for (let i = 0; i < times; i++) {\r\n      if (pages.length < pagesToShow) {\r\n        if (Math.min.apply(null, pages) > 1) {\r\n          pages.push(Math.min.apply(null, pages) - 1);\r\n        }\r\n      }\r\n      if (pages.length < pagesToShow) {\r\n        if (Math.max.apply(null, pages) < c) {\r\n          pages.push(Math.max.apply(null, pages) + 1);\r\n        }\r\n      }\r\n    }\r\n    pages.sort((a, b) => a - b);\r\n    return pages;\r\n  };\r\n\r\n    const pages = getPages().map((pageNum) => {\r\n      let buttonClass = 'page-item';\r\n\r\n      if (pageNum === props.currentPage) {\r\n        buttonClass += ' active';\r\n      }\r\n\r\n      return (\r\n        <li\r\n          key={pageNum}\r\n          className={buttonClass}\r\n          onClick={() => {\r\n            onPage(pageNum);\r\n          }}\r\n        >\r\n          <Button className=\"p-button-outlined p-button-danger\">{pageNum}</Button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let prevButtonClass = 'page-item';\r\n\r\n    if (props.currentPage === 1) {\r\n      prevButtonClass += ' disabled';\r\n    }\r\n\r\n    const prevButton = (\r\n      <li className={prevButtonClass}>\r\n        <Button\r\n          className=\"p-button-outlined p-button-danger\"\r\n          onClick={onPrev} tabIndex=\"-1\">\r\n          Previous\r\n        </Button>\r\n      </li>\r\n    );\r\n\r\n    let nextButtonClass = 'page-item';\r\n\r\n    if (isOnLastPage()) {\r\n      nextButtonClass += ' disabled';\r\n    }\r\n\r\n    const nextButton = (\r\n      <li className={nextButtonClass}>\r\n        <Button\r\n          disabled={isOnLastPage()}\r\n          onClick={onNext}\r\n          className=\"p-button-outlined p-button-danger\">\r\n          Next\r\n        </Button>\r\n      </li>\r\n    );\r\n\r\n    return (\r\n      <nav className='pagination-cont'>\r\n        <ul className=\"pagination\">\r\n          {prevButton}\r\n          {pages}\r\n          {nextButton}\r\n        </ul>\r\n      </nav>\r\n    );\r\n\r\n}\r\n\r\nexport default Pagination;","import React, { useState, useEffect }  from 'react'\r\nimport withHocs from './productListHoc'\r\nimport ProductItem from '../product-item/productItem'\r\nimport './product-list.sass'\r\nimport {paginationPipe} from '../../pagination-pipe/paginationPipe'\r\nimport Pagination from '../../pagination/pagination'\r\nimport { ProgressBar } from 'primereact/progressbar'\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\n\r\n\r\nconst ProductList =(props) => {\r\n    const { data = {} } = props;\r\n    const { products = [] } = data;\r\n\r\n    if (!products.length) {\r\n        return <ProgressSpinner />\r\n    }\r\n\r\n    const [pageArgs, setPageArgs] = useState({\r\n        currentPage: 1,\r\n        perPage: 8\r\n    });\r\n\r\n    const onPrev = () => {\r\n        const updatedState = { ...pageArgs }\r\n        updatedState.currentPage = pageArgs.currentPage - 1\r\n        setPageArgs(updatedState)\r\n    };\r\n    \r\n    const onNext = () => {\r\n        setPageArgs({\r\n        ...pageArgs,\r\n        currentPage: pageArgs.currentPage+1\r\n        })\r\n    };\r\n\r\n    const goPage = (n) => {\r\n        setPageArgs({\r\n          ...pageArgs,\r\n          currentPage: n,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className='product-list-cont'>\r\n         \r\n            <div className='product-list'>\r\n                {\r\n                    paginationPipe(products, pageArgs).map (product => {\r\n                        return <ProductItem key={product.id} product={product}  />\r\n                    })\r\n                }\r\n            </div>\r\n            <Pagination                 \r\n                totalItemsCount={products.length}\r\n                currentPage={pageArgs.currentPage}\r\n                perPage={pageArgs.perPage}\r\n                pagesToShow={8}\r\n                onGoPage={goPage}\r\n                onPrevPage={onPrev}\r\n                onNextPage={onNext}>\r\n            </Pagination>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withHocs(ProductList);","export const paginationPipe = (state, args) => {\r\n    if (!args || !args.perPage || !args.currentPage) {\r\n      return state;\r\n    }\r\n    const location = args.perPage * (args.currentPage - 1) || 0;\r\n  \r\n    return state.slice(location, location + args.perPage);\r\n  };\r\n  ","import React from 'react'\r\nimport './homePage.sass'\r\nimport ProductList from '../../components/product-list/product-list/productList'\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div className='home-cont'>\r\n            <ProductList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\nimport { InputText } from 'primereact/inputtext';\r\nimport './logInForm.sass'\r\nimport { Button } from 'primereact/button';\r\n\r\nconst LogInForm = () => {\r\n    return (\r\n        <form className='log-in'>\r\n            <InputText placeholder='log-in'  />\r\n            <InputText placeholder='e-mail'   />\r\n            <InputText placeholder='password'  />\r\n            <Button variant=\"contained\" color=\"primary\">\r\n                Next\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LogInForm\r\n","import React from 'react'\r\nimport './auth-page.sass'\r\nimport LogInForm from '../../components/forms/logInFrom'\r\n\r\n\r\nconst AuthPage = () => {\r\n\r\n    return (\r\n      <div className='auth-cont'>\r\n        <LogInForm />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AuthPage\r\n\r\n\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport './dashboardSidebar.sass'\r\nimport { Sidebar } from 'primereact/sidebar';\r\nimport { Button } from 'primereact/button';\r\nimport { FaAlignLeft } from 'react-icons/fa';\r\nimport {\r\n    Link,\r\n    useRouteMatch,\r\n  } from \"react-router-dom\";\r\n\r\n\r\nconst DashboardSidebar = () => {\r\n\r\n  let { url } = useRouteMatch();\r\n    const [visibleState, setVisibility] = useState()\r\n    return (\r\n        <div class=\"sidebar-cont\">\r\n            <Sidebar visible={visibleState} onHide={() => setVisibility(false)}>\r\n                <ul class=\"dash-side-list\">\r\n                    <li>  \r\n                        <Link to={`${url}`} >\r\n                            Home\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={`${url}/dashProducts`} >\r\n                            Products\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </Sidebar>\r\n            <Button className='side-btn' onClick={(e) => setVisibility(true)}>\r\n                <FaAlignLeft />\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardSidebar\r\n\r\n\r\n","import React from 'react'\r\n//import DashBoardRightCont from '../../../containers/dashboard-right-block/dashBoardRightCont'\r\nimport './adminMain.sass'\r\nconst AdminMain = () => {\r\n    return (\r\n        <div className='main-cont'>\r\n            <span>\r\n                Main\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminMain\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const productsQuery = gql`\r\n  query productsQuery {\r\n    products {\r\n      id\r\n      name\r\n      quantity\r\n      description\r\n      size\r\n      price\r\n    }\r\n  }\r\n`;\r\n","import { compose } from 'recompose';\r\nimport { graphql } from 'react-apollo';\r\n\r\nimport { productsQuery } from './queries';\r\n\r\n\r\nexport default compose(graphql(productsQuery));\r\n","import React, { useState } from 'react'\r\nimport { Mutation } from 'react-apollo'\r\nimport { gql } from 'apollo-boost';\r\nimport { Button } from 'primereact/button';\r\n\r\nexport const deleteProductMutation = gql`\r\n  mutation deleteProduct($id: ID) {\r\n    deleteProduct(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst DeleteProductForm = (props) => {\r\n    return (\r\n        <div style={{display: 'flex', width: '100%', justifyContent: 'center'}}>\r\n            <Mutation mutation={deleteProductMutation} variables={{id: props.data}}>\r\n                        {postMutation => <Button shape=\"round\" value=\"large\" type=\"primary\" onClick={postMutation}>Delete</Button> }\r\n            </Mutation>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteProductForm\r\n","import React from 'react'\r\nimport withHocs from './adminProductsTableHoc';\r\nimport './adminProductsTable.sass'\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { useState } from 'react';\r\nimport { Button } from 'primereact/button';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport DeleteProductForm from '../admin-forms/delete-product-form/deleteProductForm';\r\n\r\n\r\nconst AdminProductsTable = (props) => {\r\n\r\n    const { data = {} } = props;\r\n    const { products = [] } = data;\r\n\r\n    const dataTable = products.map(product => {\r\n        return product\r\n    })\r\n    \r\n    const [expandedRows, setExpandedRows] = useState(null);\r\n    const [productDialog, setProductDialog] = useState(false);\r\n    const [deleteProductDialog, setDeleteProductDialog] = useState(false);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [productId, setProductId] = useState('')\r\n\r\n    const rowExpansionTemplate = (data) => {\r\n        return (\r\n            <div className=\"orders-subtable\">\r\n                <h5>Orders for {data.name}</h5>\r\n                <DataTable value={data.orders}>\r\n                    <Column field=\"id\" header=\"Id\" sortable></Column>\r\n                    <Column field=\"customer\" header=\"Customer\" sortable></Column>\r\n                    <Column field=\"date\" header=\"Date\" sortable></Column>\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const editProduct = (product) => {\r\n\r\n        //ssetProduct({...product});\r\n        setProductDialog(true);\r\n    }\r\n\r\n\r\n    const confirmDeleteProduct = (product) => {\r\n        setDeleteProductDialog(true);\r\n        setProductId(product.id)\r\n\r\n    }\r\n\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-text p-button-outlined p-button-success p-mr-2\" onClick={() => editProduct(rowData)} />\r\n                <Button style={{marginLeft: '4rem'}} icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger\" onClick={() => confirmDeleteProduct(rowData)} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setProductDialog(false);\r\n    }\r\n\r\n    const hideDeleteProductDialog = () => {\r\n        setDeleteProductDialog(false);\r\n    }\r\n\r\n    return (\r\n        <div className='products-table'>\r\n            <DataTable value={dataTable}  expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)} rowExpansionTemplate={rowExpansionTemplate} dataKey=\"id\" sortable> \r\n                <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                <Column field=\"size\" header=\"Sizes\" sortable></Column>\r\n                <Column field=\"price\" header=\"Price\" sortable></Column>\r\n                <Column body={actionBodyTemplate}></Column>\r\n            </DataTable>\r\n            <Dialog\r\n                visible={productDialog}\r\n                style={{ width: '450px' }}\r\n                header=\"Product Edit\"\r\n                modal className=\"p-fluid\"\r\n                onHide={hideDialog}>\r\n            </Dialog>\r\n            <Dialog visible={deleteProductDialog} style={{ width: '450px' }} header=\"Are you sure to delete?\" modal onHide={hideDeleteProductDialog}>\r\n                <DeleteProductForm data={productId}\r\n                  />\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withHocs(AdminProductsTable)","import React, { useState }  from 'react'\r\nimport './addProductForm.sass'\r\nimport { Mutation } from 'react-apollo'\r\nimport { gql } from 'apollo-boost';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\n\r\nexport const addProductMutation = gql`\r\n  mutation addProduct($name: String!, $description: String!, $quantity: Int!, $image: String!, $size: String!, $price: Int!) {\r\n    addProduct(name: $name, description: $description, quantity: $quantity, image: $image, size: $size, price: $price) {\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nconst AddProductForm = () =>  {\r\n\r\n    const [name, setName] = useState();\r\n    const [description, setDescription] = useState();\r\n    const [startQuantity, setQuantity] = useState();\r\n    const [image, setImage] = useState();\r\n    const [size, setSize] = useState();\r\n    const [startPrice, setPrice] = useState();\r\n\r\n    const price = parseInt(startPrice)\r\n    const quantity = parseInt(startQuantity)\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='add-form-cont'>\r\n                <form>\r\n                    <div className='input-cont'>\r\n                        <InputText\r\n                            placeholder='Name'\r\n                            value={name}\r\n                            onChange={e => setName(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className='input-cont'>\r\n                        <InputTextarea\r\n                            placeholder='Description'\r\n                            value={description}\r\n                            onChange={e => setDescription(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className='input-cont'>\r\n                        <InputText \r\n                            placeholder='Quantity'\r\n                            value={startQuantity}\r\n                            onChange={e => setQuantity(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className='input-cont'>\r\n                        <InputText\r\n                            placeholder='Image' \r\n                            value={image}\r\n                            onChange={e => setImage(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className='input-cont'>\r\n                        <InputText\r\n                            placeholder='Size' \r\n                            value={size}\r\n                            onChange={e => setSize(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className='input-cont'>\r\n                        <InputText\r\n                            placeholder='Price' \r\n                            value={startPrice}\r\n                            onChange={e => setPrice(e.target.value)}\r\n                        />\r\n                    </div>   \r\n                    <Mutation mutation={addProductMutation} variables={{ name, description, quantity, image, size, price}}>\r\n                        {postMutation => <Button shape=\"round\" value=\"large\" type=\"primary\" onClick={postMutation}>Add Product</Button> }\r\n                    </Mutation>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n  \r\nexport default AddProductForm;\r\n  \r\n\r\n","import React from 'react'\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport AddProductForm from '../../../admin-components/admin-forms/add-product-form/addProductForm'\r\nimport { useState } from 'react';\r\n\r\nconst AdminCreate = () => {\r\n\r\n    const [displayPosition, setDisplayPosition] = useState(false);\r\n    const [position, setPosition] = useState('center');\r\n\r\n    const dialogFuncMap = {\r\n        'displayPosition': setDisplayPosition\r\n    }\r\n\r\n    const onClick = (name, position) => {\r\n        dialogFuncMap[`${name}`](true);\r\n\r\n        if (position) {\r\n            setPosition(position);\r\n        }\r\n    }\r\n\r\n    const onHide = (name) => {\r\n        dialogFuncMap[`${name}`](false);\r\n    }\r\n\r\n    const btnStyles = {\r\n        position: 'absolut',\r\n        top: \"25%\",\r\n        left: \"90%\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"dialog-demo\">\r\n            <div className=\"card\">\r\n                <div className=\"p-grid p-dir-col\">\r\n                    <div className=\"p-col\">\r\n                        <Button onClick={() => onClick('displayPosition', 'top')} style={btnStyles}>\r\n                            Add new\r\n                         </Button>\r\n                    </div>\r\n                </div>\r\n                <Dialog visible={displayPosition} position={position} modal style={{ width: '30vw' }} onHide={() => onHide('displayPosition')}>\r\n                    <AddProductForm />\r\n                </Dialog>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AdminCreate\r\n","import React from 'react'\r\nimport AdminProductsTable from '../../admin-products/adminProductsTable'\r\nimport './adminProductList.sass'\r\nimport AdminCreate from '../../admin-popups/admin-create/adminCreate'\r\nimport AddProductForm from '../../admin-forms/add-product-form/addProductForm'\r\n\r\n\r\nconst AdminProductList = () => {\r\n    return (\r\n        <div className='list-cont'>\r\n            <AdminCreate />\r\n            <AdminProductsTable />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AdminProductList\r\n","import React from 'react'\r\nimport './dashboardPage.sass'\r\n\r\nimport {\r\n    useRouteMatch,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\nimport DashboardSidebar from '../../components/admin-components/dashboard-sidebar/dashboardSidebar';\r\nimport AdminMain from '../../components/admin-components/admin-pages/admin-main/adminMain'\r\nimport AdminProductList from '../../components/admin-components/admin-pages/admin-products-list/adminProductList'\r\n\r\n\r\nconst DashboardPage = () => {\r\n    let { path } = useRouteMatch();\r\n\r\n    return (\r\n        <div className='dashbord-main-cont'>\r\n            <DashboardSidebar/>\r\n            <Switch>\r\n                <Route exact path={path} >\r\n                    <AdminMain />\r\n                </ Route>\r\n                <Route path={path} >\r\n                    <AdminProductList />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardPage\r\n","import React from 'react'\r\n\r\n\r\nconst CatalogPage = () => { \r\n  return (\r\n    <div></div>\r\n  )\r\n}\r\n\r\nexport default CatalogPage\r\n","import React from 'react'\r\nimport './productDetailsItem.sass'\r\n\r\nconst ProductDetailsItem = props => {\r\n    const product = props.product\r\n\r\n    return (\r\n        <div className='product-details'>\r\n            <div className='product-cont'>\r\n                <div className='product-img'>\r\n                    <img src={product.image} />\r\n                </div>\r\n                <div className='product-description'>\r\n                    <h2>\r\n                        {product.name}\r\n                    </h2>\r\n                    <p>\r\n                        {product.description}\r\n                    </p>\r\n                    <p className='product-price'>\r\n                        {product.price}\r\n                    </p>\r\n                    <p>\r\n                        {product.quantity}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProductDetailsItem\r\n","import React from 'react'\r\nimport {useLocation} from \"react-router-dom\";\r\nimport { Query } from 'react-apollo';\r\nimport { gql } from 'apollo-boost';\r\nimport { ProgressBar } from 'primereact/progressbar';\r\nimport ProductDetailsItem from '../product-deatils-item/productDetailsItem'\r\nimport \"./productDetailsCont.sass\"\r\n\r\nconst productQuery = gql`\r\n    query product($Id: ID!) {\r\n        product(id: $Id) {\r\n            name\r\n            description\r\n            image\r\n            quantity\r\n            price\r\n        }\r\n    }\r\n`;\r\n\r\nconst productDetailsCont = () => {\r\n    const search = useLocation().search;\r\n    const Id = new URLSearchParams(search).get('id');\r\n\r\n    return (\r\n        <Query query={productQuery} variables={{ Id }}>\r\n            {({ data }) => {\r\n                if (!data) return <ProgressBar mode=\"indeterminate\" />\r\n                const product = data.product;\r\n                return (\r\n                    <div className='product-details-cont'>\r\n                        <ProductDetailsItem product={product} />\r\n                    </div>\r\n                );\r\n            }}\r\n        </Query>\r\n    )\r\n}\r\n\r\n\r\nexport default productDetailsCont\r\n\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport HomePage from '../pages/home-page/home-page'\r\nimport AuthPage from '../pages/auth-page/auth-page'\r\nimport DashboardPage from '../pages/dashboard-page/dashboardPage'\r\nimport CatalogPage from '../pages/catalog-page/catalogPage'\r\nimport productDetailsCont from '../components/product-details/prodcut-details-cont/productDetailsCont'\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={HomePage} />\r\n      <Route path=\"/auth\" component={AuthPage} />\r\n      <Route path=\"/dashboard\" component={DashboardPage} /> \r\n      <Route path=\"/catalog\" component={CatalogPage} />  \r\n      <Route path=\"/product\" component={productDetailsCont} />  \r\n    </Switch>\r\n  );\r\n}","import { createBrowserHistory } from 'history'\r\n\r\n\r\nconst history = createBrowserHistory();\r\nexport default history;","import React from 'react';\r\nimport ApolloClient from 'apollo-boost'\r\nimport { ApolloProvider } from '@apollo/react-hooks'\r\nimport Nav from './components/navigation/nav'\r\nimport './styles/style.sass'\r\nimport Routes from './routes/routes'\r\nimport history from './history/history';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst client = new ApolloClient ({\r\n  uri: 'http://localhost:5000/graphql',\r\n})\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ApolloProvider client={client}>\r\n        <Router history={history} >\r\n          <Nav />\r\n          <Routes />\r\n        </Router>\r\n      </ApolloProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.af0f6470.png\";","module.exports = __webpack_public_path__ + \"static/media/cart.62265274.svg\";"],"sourceRoot":""}